<Page
    x:Class="DataHarbor.Views.Pages.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:DataHarbor.Helpers"
    xmlns:local="clr-namespace:DataHarbor.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:lg="clr-namespace:DataHarbor.Services"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="SettingsPage"
    d:DataContext="{d:DesignInstance local:SettingsPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">
    <Page.Resources>
        <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <helpers:BoolToTextConverter x:Key="BoolToTextConverter" />
    </Page.Resources>

    <StackPanel>
        <!--主题-->
        <ui:CardControl>
            <ui:CardControl.Icon>
                <ui:SymbolIcon Symbol="DarkTheme24"/>
            </ui:CardControl.Icon>
            <ui:CardControl.Header>
                <StackPanel>
                    <TextBlock Text="{Binding [Theme],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding [Theme_D],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                </StackPanel>
            </ui:CardControl.Header>
            <ui:CardControl.Content>
                <ComboBox SelectedIndex="{Binding ViewModel.CurrentTheme}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ChangeThemeCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBoxItem Content="{Binding [Theme_S_Light],Source={x:Static lg:LanguageService.Instance}}" />
                    <ComboBoxItem Content="{Binding [Theme_S_Dark],Source={x:Static lg:LanguageService.Instance}}"/>
                </ComboBox>
            </ui:CardControl.Content>
        </ui:CardControl>
        <!--语言-->
        <ui:CardControl Margin="0 8 0 0">
            <ui:CardControl.Icon>
                <ui:SymbolIcon Symbol="LocalLanguage24"/>
            </ui:CardControl.Icon>
            <ui:CardControl.Header>
                <StackPanel>
                    <TextBlock Text="{Binding [Languages],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding [Languages_D],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                </StackPanel>
            </ui:CardControl.Header>
            <ui:CardControl.Content>
                <ComboBox SelectedIndex="{Binding ViewModel.CurrentLanguage}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ChangeLanguageCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBoxItem Content="{Binding [Languages_S_zhCN],Source={x:Static lg:LanguageService.Instance}}"/>
                    <ComboBoxItem Content="{Binding [Languages_S_enUS],Source={x:Static lg:LanguageService.Instance}}"/>
                </ComboBox>
            </ui:CardControl.Content>
        </ui:CardControl>
        <!--检查更新-->
        <ui:CardControl Margin="0 8 0 0">
            <ui:CardControl.Icon>
                <ui:SymbolIcon Symbol="CloudCheckmark24"/>
            </ui:CardControl.Icon>
            <ui:CardControl.Header>
                <StackPanel>
                    <TextBlock Text="{Binding [CheckUpdate],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding [CheckUpdate_D],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                </StackPanel>
            </ui:CardControl.Header>
            <ui:CardControl.Content>
                <WrapPanel>
                    <TextBlock Text="{Binding ElementName=CheckUpdateToggleSwitch, Path=IsChecked, Converter={StaticResource BoolToTextConverter},Mode=OneWay}"
                               Margin="0 0 10 0"/>
                    <ui:ToggleSwitch Name="CheckUpdateToggleSwitch" IsChecked="{Binding ViewModel.CurrentCheckUpdate}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ViewModel.ChangeAutoCheckUpdateCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ui:ToggleSwitch>
                </WrapPanel>
            </ui:CardControl.Content>
        </ui:CardControl>
        <!--开机启动-->
        <ui:CardControl Margin="0 8 0 0">
            <ui:CardControl.Icon>
                <ui:SymbolIcon Symbol="CalendarWeekStart24"/>
            </ui:CardControl.Icon>
            <ui:CardControl.Header>
                <StackPanel>
                    <TextBlock Text="{Binding [Booting],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding [Booting_D],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                </StackPanel>
            </ui:CardControl.Header>
            <ui:CardControl.Content>
                <WrapPanel>
                    <TextBlock Text="{Binding ElementName=BootingToggleSwitch, Path=IsChecked, Converter={StaticResource BoolToTextConverter},Mode=OneWay}"
                               Margin="0 0 10 0"/>
                    <ui:ToggleSwitch Name="BootingToggleSwitch" IsChecked="{Binding ViewModel.CurrentBooting}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ViewModel.ChangeAutoBootingCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ui:ToggleSwitch>
                </WrapPanel>
            </ui:CardControl.Content>
        </ui:CardControl>
        <!--关闭-->
        <ui:CardControl Margin="0 8 0 0">
            <ui:CardControl.Icon>
                <ui:SymbolIcon Symbol="ClosedCaptionOff24"/>
            </ui:CardControl.Icon>
            <ui:CardControl.Header>
                <StackPanel>
                    <TextBlock Text="{Binding [CloseMode],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding [CloseMode_D],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                </StackPanel>
            </ui:CardControl.Header>
            <ui:CardControl.Content>
                <ComboBox SelectedIndex="{Binding ViewModel.CurrentCloseMode}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ChangeCloseModeCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBoxItem Content="{Binding [CloseMode_S_1],Source={x:Static lg:LanguageService.Instance}}"/>
                    <ComboBoxItem Content="{Binding [CloseMode_S_2],Source={x:Static lg:LanguageService.Instance}}"/>
                </ComboBox>
            </ui:CardControl.Content>
        </ui:CardControl>
        <!--通知-->
        <ui:CardControl Margin="0 8 0 0">
            <ui:CardControl.Icon>
                <ui:SymbolIcon Symbol="CommentNote24"/>
            </ui:CardControl.Icon>
            <ui:CardControl.Header>
                <StackPanel>
                    <TextBlock Text="{Binding [MessageMode],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding [MessageMode_D],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                </StackPanel>
            </ui:CardControl.Header>
            <ui:CardControl.Content>
                <ComboBox SelectedIndex="{Binding ViewModel.CurrentPopUp}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ChangePopUpModeCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBoxItem Name="SilentNotification" Content="{Binding [MessageMode_S_1],Source={x:Static lg:LanguageService.Instance}}"/>
                    <ComboBoxItem Content="{Binding [MessageMode_S_2],Source={x:Static lg:LanguageService.Instance}}"/>
                    <!--<ComboBoxItem Content="系统弹窗通知（待计划）"/>-->
                </ComboBox>
            </ui:CardControl.Content>
        </ui:CardControl>
        <!--自动关闭-->
        <ui:CardControl IsEnabled="{Binding ElementName=SilentNotification,Path=IsSelected,Mode=OneWay}" 
                        Margin="0 8 0 0">
            <ui:CardControl.Icon>
                <ui:SymbolIcon Symbol="Timer24"/>
            </ui:CardControl.Icon>
            <ui:CardControl.Header>
                <StackPanel>
                    <TextBlock Text="{Binding [MessageMode],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding [MessageMode],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                </StackPanel>
            </ui:CardControl.Header>
            <ui:CardControl.Content>
                <WrapPanel>
                    <TextBlock Text="{Binding ElementName=TimeSlider,Path=Value,Mode=OneWay}" 
                               Margin="0 0 10 0" VerticalAlignment="Center"/>
                    <Slider Name="TimeSlider" Value="{Binding ViewModel.CurrentPopTime}" Minimum="3" Maximum="12">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding ViewModel.ChangePopUpTimeCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>
                </WrapPanel>
            </ui:CardControl.Content>
        </ui:CardControl>
        <!--数据收集-->
        <TextBlock
            Margin="0,24,0,10"
            FontSize="20"
            FontWeight="Medium"
            Text="{Binding [Data_Page],Source={x:Static lg:LanguageService.Instance}}" />
        <!--数据管理-->
        <ui:CardControl Margin="0 8 0 0">
            <ui:CardControl.Icon>
                <ui:SymbolIcon Symbol="HomeDatabase24"/>
            </ui:CardControl.Icon>
            <ui:CardControl.Header>
                <StackPanel>
                    <TextBlock Text="{Binding [DataManagementMode],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding [DataManagementMode_D],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                </StackPanel>
            </ui:CardControl.Header>
            <ui:CardControl.Content>
                <ComboBox>
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ChangePopUpModeCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                    <ComboBoxItem Content="{Binding [DataManagementMode_S_1],Source={x:Static lg:LanguageService.Instance}}"/>
                    <ComboBoxItem Content="{Binding [DataManagementMode_S_2],Source={x:Static lg:LanguageService.Instance}}" IsSelected="True"/>
                </ComboBox>
            </ui:CardControl.Content>
        </ui:CardControl>
        <!--数据库位置-->
        <ui:CardControl Margin="0 8 0 0">
            <ui:CardControl.Icon>
                <ui:SymbolIcon Symbol="WindowLocationTarget20"/>
            </ui:CardControl.Icon>
            <ui:CardControl.Header>
                <StackPanel>
                    <TextBlock Text="{Binding [DataLocation],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding [DataLocation_D],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                </StackPanel>
            </ui:CardControl.Header>
            <ui:CardControl.Content>
                <ComboBox>
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ViewModel.ChangePopUpModeCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                    <ComboBoxItem Content="{Binding [DataLocation_S_1],Source={x:Static lg:LanguageService.Instance}}" IsSelected="True"/>
                    <ComboBoxItem Content="{Binding [DataLocation_S_2],Source={x:Static lg:LanguageService.Instance}}"/>
                </ComboBox>
            </ui:CardControl.Content>
        </ui:CardControl>
        <!--存储管理-->
        <ui:CardControl Margin="0 8 0 0">
            <ui:CardControl.Icon>
                <ui:SymbolIcon Symbol="Storage24"/>
            </ui:CardControl.Icon>
            <ui:CardControl.Header>
                <StackPanel>
                    <TextBlock Text="{Binding [DataSaveStorage],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                    <TextBlock Text="{Binding [DataSaveStorage_D],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                </StackPanel>
            </ui:CardControl.Header>
            <ui:CardControl.Content>
                <WrapPanel>
                    <TextBlock Text="{Binding ElementName=DataSaveStorageToggleSwitch, Path=IsChecked, Converter={StaticResource BoolToTextConverter},Mode=OneWay}"
                               Margin="0 0 10 0"/>
                    <ui:ToggleSwitch Name="DataSaveStorageToggleSwitch" IsChecked="True">
                        <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ViewModel.ChangeAutoBootingCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->
                    </ui:ToggleSwitch>
                </WrapPanel>
            </ui:CardControl.Content>
        </ui:CardControl>

        <!--关于-->
        <TextBlock
            Margin="0,24,0,10"
            FontSize="20"
            FontWeight="Medium"
            Text="{Binding [About],Source={x:Static lg:LanguageService.Instance}}" />
        <ui:CardExpander IsExpanded="True" CornerRadius="8" Margin="0 0 0 20">
            <ui:CardExpander.Icon>
                <ui:SymbolIcon Symbol="DataUsageToolbox24"/>
            </ui:CardExpander.Icon>
            <ui:CardExpander.Header>
                <Grid>
                    <StackPanel>
                        <TextBlock Text="{Binding [About_Title],Source={x:Static lg:LanguageService.Instance}}" FontWeight="Bold"/>
                        <TextBlock Text="{Binding [About_Title_D],Source={x:Static lg:LanguageService.Instance}}" FontSize="12"/>
                    </StackPanel>
                    <WrapPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                        <ui:Button Content="{Binding [CheckUpdate],Source={x:Static lg:LanguageService.Instance}}" 
                                   Margin="0 0 10 0" Command="{Binding ViewModel.CheckUpdateCommand}"/>
                        <TextBlock Text="{Binding [About_S_5],Source={x:Static lg:LanguageService.Instance}}"  VerticalAlignment="Center" Margin="0 0 20 0"/>
                    </WrapPanel>
                </Grid>
            </ui:CardExpander.Header>
            <ui:CardExpander.Content>
                <StackPanel>
                    <StackPanel>
                        <TextBlock Text="{Binding [About_S_1],Source={x:Static lg:LanguageService.Instance}}" Margin="0 5"/>
                        <WrapPanel>
                            <ui:Hyperlink Content="WPF-UI" NavigateUri=""/>
                            <ui:Hyperlink Content="CommunityToolkit.Mvvm"/>
                            <ui:Hyperlink Content="SQLite"/>
                            <ui:Hyperlink Content="Microsoft.Extensions.Hosting"/>
                            <ui:Hyperlink Content="Microsoft.Xaml.Behaviors.Wpf"/>
                        </WrapPanel>
                    </StackPanel>
                    <StackPanel>
                        <TextBlock Text="{Binding [About_S_2],Source={x:Static lg:LanguageService.Instance}}" Margin="0 5"/>
                        <TextBlock Text="{Binding [About_S_3],Source={x:Static lg:LanguageService.Instance}}" 
                                   Margin="10 5 0 0"/>
                        <WrapPanel Margin="10 5 0 0">
                            <TextBlock Text="{Binding [About_S_4],Source={x:Static lg:LanguageService.Instance}}"
                                       Margin="0 5 0 0" VerticalAlignment="Center"/>
                            <ui:Hyperlink Content="{Binding [Blog],Source={x:Static lg:LanguageService.Instance}}" 
                                       NavigateUri="https://www.helloseraphine.top/"/>
                        </WrapPanel>
                    </StackPanel>
                </StackPanel>
            </ui:CardExpander.Content>
        </ui:CardExpander>

        <!--<TextBlock
            FontSize="20"
            FontWeight="Medium"
            Text="Personalization" />
        <TextBlock Margin="0,12,0,0" Text="Theme" />
        <RadioButton
            Margin="0,12,0,0"
            Command="{Binding ViewModel.ChangeThemeCommand, Mode=OneWay}"
            CommandParameter="theme_light"
            Content="Light"
            GroupName="themeSelect"
            IsChecked="{Binding ViewModel.CurrentTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}" />
        <RadioButton
            Margin="0,8,0,0"
            Command="{Binding ViewModel.ChangeThemeCommand, Mode=OneWay}"
            CommandParameter="theme_dark"
            Content="Dark"
            GroupName="themeSelect"
            IsChecked="{Binding ViewModel.CurrentTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}" />

        <TextBlock
            Margin="0,24,0,0"
            FontSize="20"
            FontWeight="Medium"
            Text="About DataHarbor" />
        <TextBlock Margin="0,12,0,0" Text="{Binding ViewModel.AppVersion, Mode=OneWay}" />-->
    </StackPanel>
</Page>
